import { InMemoryCache } from "@apollo/client";
import { concatPagination } from "@apollo/client/utilities";
// generated by Fragment Matcher plugin
import introspectionResult from "../api/gql/fragment-matcher";

import { User } from "@api/gql/types";
import { AlertState } from "@lib/types/alerts";

export const cache: InMemoryCache = new InMemoryCache({
  possibleTypes: introspectionResult.possibleTypes,
  typePolicies: {
    Query: {
      fields: {
        allPosts: concatPagination(),
        loggedIn: {
          read() {
            return loggedInVar();
          },
        },
        user: {
          read() {
            return userVar();
          },
        },
      },
    },
  },
});

export const loggedInVar = cache.makeVar<boolean>(false);
export const userVar = cache.makeVar<User | undefined>(undefined);

export const alertVar = cache.makeVar<AlertState>({
  open: false,
  primary: "",
  secondary: "",
  type: "success",
  timeout: 2000,
});
